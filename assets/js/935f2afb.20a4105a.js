"use strict";(self.webpackChunkdasarpemrogramanrust=self.webpackChunkdasarpemrogramanrust||[]).push([[53],{1109:a=>{a.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Dasar Pemrograman Rust","href":"/","docId":"index"},{"type":"link","label":"Pengenalan Rust Programming","href":"/pengelanan-rust-programming","docId":"pengelanan-rust-programming"},{"type":"link","label":"Version Changelogs & Updates","href":"/CHANGELOG","docId":"CHANGELOG"},{"type":"link","label":"Contribution & Tech Stack","href":"/CONTRIBUTING","docId":"CONTRIBUTING"},{"type":"link","label":"Download versi PDF","href":"/download-pdf","docId":"download-pdf"},{"type":"link","label":"Lisensi & Distribusi Konten","href":"/LICENSE","docId":"LICENSE"},{"type":"category","label":"Persiapan dan Instalasi","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Instalasi Rust","href":"/installation/instalasi-rust","docId":"installation/instalasi-rust"},{"type":"link","label":"Rust Editor & Plugin","href":"/installation/rust-editor-plugin","docId":"installation/rust-editor-plugin"}]},{"type":"category","label":"Pemrograman Rust Dasar","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"A.1. Program Pertama \u279c Hello Rust","href":"/basic/hello-rust","docId":"basic/hello-rust"},{"type":"link","label":"A.2. Build dan Run Program Rust","href":"/basic/build-dan-run-program-rust","docId":"basic/build-dan-run-program-rust"},{"type":"link","label":"A.3. Komentar","href":"/basic/komentar","docId":"basic/komentar"},{"type":"link","label":"A.4. Variabel","href":"/basic/variabel","docId":"basic/variabel"},{"type":"link","label":"A.5. Tipe Data \u279c Primitive Scalar","href":"/basic/tipe-data-primitive-scalar","docId":"basic/tipe-data-primitive-scalar"},{"type":"link","label":"A.6. Tipe Data \u279c String Literal (&str)","href":"/basic/tipe-data-string-literal","docId":"basic/tipe-data-string-literal"},{"type":"link","label":"A.7. Konstanta","href":"/basic/konstanta","docId":"basic/konstanta"},{"type":"link","label":"A.8. Operator","href":"/basic/operator","docId":"basic/operator"},{"type":"link","label":"A.9. Seleksi Kondisi \u279c  if, else if, else","href":"/basic/seleksi-kondisi-if","docId":"basic/seleksi-kondisi-if"},{"type":"link","label":"A.10. Perulangan \u279c while","href":"/basic/perulangan-while","docId":"basic/perulangan-while"},{"type":"link","label":"A.11. Perulangan \u279c loop, break, continue, label","href":"/basic/perulangan-loop-break-continue-label","docId":"basic/perulangan-loop-break-continue-label"},{"type":"link","label":"A.12. Perulangan \u279c for in","href":"/basic/perulangan-for-in","docId":"basic/perulangan-for-in"},{"type":"link","label":"A.13. Array","href":"/basic/array","docId":"basic/array"},{"type":"link","label":"A.14. Slice (Basic)","href":"/basic/slice","docId":"basic/slice"},{"type":"link","label":"A.15. Tuple","href":"/basic/tuple","docId":"basic/tuple"},{"type":"link","label":"A.16. Vector","href":"/basic/vector","docId":"basic/vector"},{"type":"link","label":"A.17. Function","href":"/basic/function","docId":"basic/function"},{"type":"link","label":"A.18. Module System \u279c Path & Item","href":"/basic/path-item","docId":"basic/path-item"},{"type":"link","label":"A.19. Module System \u279c Package & Crate","href":"/basic/package-crate","docId":"basic/package-crate"},{"type":"link","label":"A.20. Module System \u279c Module","href":"/basic/module-basic","docId":"basic/module-basic"},{"type":"link","label":"A.21. Module System \u279c Inline Module","href":"/basic/module-inline","docId":"basic/module-inline"},{"type":"link","label":"A.22. Module System \u279c Scope & Akses Item","href":"/basic/module-scope-item-access","docId":"basic/module-scope-item-access"},{"type":"link","label":"A.23. Struct","href":"/basic/struct","docId":"basic/struct"},{"type":"link","label":"A.24. Associated Function","href":"/basic/associated-function","docId":"basic/associated-function"},{"type":"link","label":"A.25. Method","href":"/basic/method","docId":"basic/method"},{"type":"link","label":"A.26. Enum","href":"/basic/enum","docId":"basic/enum"},{"type":"link","label":"A.27. Type Alias & Casting","href":"/basic/type-alias-casting","docId":"basic/type-alias-casting"},{"type":"link","label":"A.28. Module System \u279c Visibility & Privacy","href":"/basic/visibility-privacy","docId":"basic/visibility-privacy"},{"type":"link","label":"A.29. Module System \u279c Use, Import, Re-export","href":"/basic/use","docId":"basic/use"},{"type":"link","label":"A.30. Block Expression","href":"/basic/block-expression","docId":"basic/block-expression"},{"type":"link","label":"A.31. Shadowing","href":"/basic/shadowing","docId":"basic/shadowing"},{"type":"link","label":"A.32. Basic Memory Management","href":"/basic/basic-memory-management","docId":"basic/basic-memory-management"},{"type":"link","label":"A.33. Pointer & References","href":"/basic/pointer-references","docId":"basic/pointer-references"},{"type":"link","label":"A.34. Ownership","href":"/basic/ownership","docId":"basic/ownership"},{"type":"link","label":"A.35. Borrowing","href":"/basic/borrowing","docId":"basic/borrowing"},{"type":"link","label":"A.36. Traits","href":"/basic/traits","docId":"basic/traits"},{"type":"link","label":"A.37. Traits \u279c Advanced","href":"/basic/advanced-traits","docId":"basic/advanced-traits"},{"type":"link","label":"A.38. Generics","href":"/basic/generics","docId":"basic/generics"},{"type":"link","label":"A.39. Tipe Data \u279c Option","href":"/basic/option-type","docId":"basic/option-type"},{"type":"link","label":"A.40. Tipe Data \u279c Result","href":"/basic/result-type","docId":"basic/result-type"},{"type":"link","label":"A.41. Operator ?","href":"/basic/operator-tanda-tanya","docId":"basic/operator-tanda-tanya"},{"type":"link","label":"A.42. Pattern Matching","href":"/basic/pattern-matching","docId":"basic/pattern-matching"},{"type":"link","label":"A.43. Static Item","href":"/basic/static","docId":"basic/static"},{"type":"link","label":"A.44. Lifetime","href":"/basic/lifetime","docId":"basic/lifetime"},{"type":"link","label":"A.45. Slice Memory Management","href":"/basic/slice-memory-management","docId":"basic/slice-memory-management"},{"type":"link","label":"A.46. String Literal (&str) vs. String Custom Type","href":"/basic/string-slice-vs-string-literal","docId":"basic/string-slice-vs-string-literal"},{"type":"link","label":"A.47. Tipe Data \u279c String Custom Type","href":"/basic/tipe-data-custom-type-string-slice","docId":"basic/tipe-data-custom-type-string-slice"},{"type":"link","label":"A.48. Closures","href":"/basic/closures","docId":"basic/closures"},{"type":"link","label":"A.49. Trait \u279c Function (Fn, FnMut, FnOnce)","href":"/basic/trait-function","docId":"basic/trait-function"},{"type":"link","label":"A.50. Trait \u279c Iterator","href":"/basic/trait-iterator","docId":"basic/trait-iterator"},{"type":"link","label":"A.51. Attributes","href":"/basic/attributes","docId":"basic/attributes"},{"type":"link","label":"A.52. Date Time","href":"/basic/datetime","docId":"basic/datetime"},{"type":"link","label":"A.53. File, Path, Directory","href":"/basic/file-path-directory","docId":"basic/file-path-directory"},{"type":"link","label":"A.54. Error \u279c Unrecoverable Error / Panic","href":"/basic/unrecoverable-panic-error","docId":"basic/unrecoverable-panic-error"},{"type":"link","label":"A.55. Error \u279c Recoverable Error & Error Handling","href":"/basic/recoverable-error-handling","docId":"basic/recoverable-error-handling"}]}]},"docs":{"basic/advanced-traits":{"id":"basic/advanced-traits","title":"A.37. Traits \u279c Advanced","description":"Chapter ini merupakan kelanjutan dari chapter sebelumnya. Di sini kita fokus ke pembuatan local trait, macam-macam implementasi traits, traits bound syntax, associated types, dan topik yang masih relevan dengan traits lainnya.","sidebar":"tutorialSidebar"},"basic/array":{"id":"basic/array","title":"A.13. Tipe Data \u279c Array","description":"Belajar array pada rust. Contoh penerapan array, iterasi array, dan operasi lainnya pada array","sidebar":"tutorialSidebar"},"basic/associated-function":{"id":"basic/associated-function","title":"A.24. Associated Function","description":"Chapter ini membahas tentang associated function. Kita akan belajar apa itu associated function dan apa perbedannya dengan fungsi biasa.","sidebar":"tutorialSidebar"},"basic/attributes":{"id":"basic/attributes","title":"A.51. Attributes","description":"Kita telah beberapa kali menggunakan attributes pada chapter-chapter sebelumnya, contohnya seperti #[derive(Debug)]. Pada chapter ini kita akan bahas tentang apa sebenarnya attributes, macam-macam jenisnya, beserta kegunaannya.","sidebar":"tutorialSidebar"},"basic/basic-memory-management":{"id":"basic/basic-memory-management","title":"A.32. Basic Memory Management","description":"Pada chapter ini kita akan belajar tentang salah satu hal penting dalam topik pemrograman secara general, yaitu memory management yang mencakup pembahasan tentang alamat memori, pointer, heap, stack, dan juga error-error yang terjadi karena kesalahan dalam manajemen memori.","sidebar":"tutorialSidebar"},"basic/block-expression":{"id":"basic/block-expression","title":"A.30. Block Expression","description":"Pada chapter ini kita akan belajar tentang block expression.","sidebar":"tutorialSidebar"},"basic/borrowing":{"id":"basic/borrowing","title":"A.35. Borrowing","description":"Pada chapter ini kita akan belajar tentang apa itu borrowing dalam Rust programming.","sidebar":"tutorialSidebar"},"basic/build-dan-run-program-rust":{"id":"basic/build-dan-run-program-rust","title":"A.2. Build dan Run Program Rust","description":"Cara run program Rust menggunakan cargo. Pada chapter ini kita akan belajar lebih lanjut tentang command untuk proses build dan run dalam program Rust. Sebelumnya kita sudah belajar tentang cargo new dan cargo run, selain command tersebut ada juga command lain yaitu cargo build untuk proses kompilasi build kode program.","sidebar":"tutorialSidebar"},"basic/closures":{"id":"basic/closures","title":"A.48. Closures","description":"Chapter ini membahas tentang closures. Closures sendiri merupakan block fungsi anonimus (anonymous function) yang memiliki kelebihan bisa mengakses item-tem yang posisinya berada di luar block closure tersebut tetapi masih dalam current block scope.","sidebar":"tutorialSidebar"},"basic/datetime":{"id":"basic/datetime","title":"A.52. Date Time","description":"Pada chapter ini kita akan mempelajari tentang tipe data datetime yang ada di Rust programming.","sidebar":"tutorialSidebar"},"basic/enum":{"id":"basic/enum","title":"A.26. Enum","description":"Enum atau enumerated type adalah sebuah tipe data yang digunakan untuk menampung nilai konstan. Pada chapter ini kita akan mempelajarinya.","sidebar":"tutorialSidebar"},"basic/file-path-directory":{"id":"basic/file-path-directory","title":"A.53. File, Path, Directory","description":"Pada chapter ini kita akan belajar tentang beberapa API milik Rust yang disediakan untuk manajemen path dan file system.","sidebar":"tutorialSidebar"},"basic/function":{"id":"basic/function","title":"A.17. Function","description":"Pada chapter ini kita akan belajar tentang function atau fungsi.","sidebar":"tutorialSidebar"},"basic/generics":{"id":"basic/generics","title":"A.38. Generics","description":"Chapter ini membahas tentang generics.","sidebar":"tutorialSidebar"},"basic/hello-rust":{"id":"basic/hello-rust","title":"A.1. Program Pertama \u279c Hello Rust","description":"Belajar membuat program hello world di Rust, dimulai dengan pembuatan program Hello World sederhana.","sidebar":"tutorialSidebar"},"basic/komentar":{"id":"basic/komentar","title":"A.3. Komentar","description":"Pada chapter ini kita akan membahas tentang komentar pada pemrograman Rust. Ada beberapa jenis komentar yang tersedia, namun untuk sekarang yang penting diketahui hanya 2.","sidebar":"tutorialSidebar"},"basic/konstanta":{"id":"basic/konstanta","title":"A.7. Konstanta","description":"Chapter ini membahas tentang konstanta di bahasa Rust.","sidebar":"tutorialSidebar"},"basic/lifetime":{"id":"basic/lifetime","title":"A.44. Lifetime","description":"Pada chapter ini kita akan belajar tentang lifetime. Lifetime adalah yang digunakan oleh Rust compiler untuk memonitor umur dari references agar tetap dianggap valid.","sidebar":"tutorialSidebar"},"basic/method":{"id":"basic/method","title":"A.25. Method","description":"Pada chapter ini kita akan belajar tentang method beserta perbedaannya dengan associated function.","sidebar":"tutorialSidebar"},"basic/module-basic":{"id":"basic/module-basic","title":"A.20. Module System \u279c Module","description":"Module adalah salah satu chapter yang cukup penting dalam pemrograman Rust. Pada bagian ini kita akan mempelajari dasarnya.","sidebar":"tutorialSidebar"},"basic/module-inline":{"id":"basic/module-inline","title":"A.21. Module System \u279c Inline Module","description":"Pada chapter sebelumnya kita telah belajar cara manajemen module. Pembahasan tersebut dilanjut pada chapter ini, yaitu tentang inline module.","sidebar":"tutorialSidebar"},"basic/module-scope-item-access":{"id":"basic/module-scope-item-access","title":"A.22. Module System \u279c Scope & Akses Item","description":"Pembahasan chapter ini masih dalam lingkup module system, yaitu tentang scope dan pengakesan module item.","sidebar":"tutorialSidebar"},"basic/operator":{"id":"basic/operator","title":"A.8. Operator","description":"Chapter ini membahas mengenai operator pada pemrograman rust.","sidebar":"tutorialSidebar"},"basic/operator-tanda-tanya":{"id":"basic/operator-tanda-tanya","title":"A.41. Operator ?","description":"Operator ? (atau question mark operator) adalah operator yang cukup berguna untuk operasi unwrap nilai dari tipe Result atau Option. Pada chapter ini kita akan belajar tentang operator tersebut.","sidebar":"tutorialSidebar"},"basic/option-type":{"id":"basic/option-type","title":"A.39. Tipe Data \u279c Option","description":"Option adalah salah satu tipe data penting pada Rust programming, digunakan untuk menampung data yang isinya bisa berpotensi kosong (None). Chapter ini membahas tentang tipe data tersebut.","sidebar":"tutorialSidebar"},"basic/ownership":{"id":"basic/ownership","title":"A.34. Ownership","description":"Chapter ini berisi pembahasan tentang ownership, bagaimana Rust melakukan manajemen memory dengan menerapkan approach ownership ini.","sidebar":"tutorialSidebar"},"basic/package-crate":{"id":"basic/package-crate","title":"A.19. Module System \u279c Package & Crate","description":"Chapter ini membahas mengenai konsep package dan path dalam Rust programming. Pembelajaran dimulai dari pembahasan mengenai konsep crate terlebih dahulu, kemudian masuk ke package.","sidebar":"tutorialSidebar"},"basic/path-item":{"id":"basic/path-item","title":"A.18. Module System \u279c Path & Item","description":"Chapter ini membahas tentang konsep path dan item dalam Rust programming.","sidebar":"tutorialSidebar"},"basic/pattern-matching":{"id":"basic/pattern-matching","title":"A.42. Pattern Matching","description":"Chapter ini membahas tentang pattern matching, sebuah teknik yang lebih advance dibanding seleksi kondisi biasa.","sidebar":"tutorialSidebar"},"basic/perulangan-for-in":{"id":"basic/perulangan-for-in","title":"A.12. Perulangan \u279c for in","description":"for in adalah salah satu keyword untuk operasi perulangan yang ada di Rust selain loop dan while. Pada chapter ini kita akan mempelajarinya.","sidebar":"tutorialSidebar"},"basic/perulangan-loop-break-continue-label":{"id":"basic/perulangan-loop-break-continue-label","title":"A.11. Perulangan \u279c loop, break, continue, label","description":"Selain keyword while, ada juga keyword loop yang fungsi dasarnya adalah sama, yaitu untuk perulangan.","sidebar":"tutorialSidebar"},"basic/perulangan-while":{"id":"basic/perulangan-while","title":"A.10. Perulangan \u279c while","description":"Di Rust ada beberapa cara untuk melakukan perulangan, salah satunya adalah dengan menggunakan keyword while, dan pada chapter ini kita akan mempelajarinya.","sidebar":"tutorialSidebar"},"basic/pointer-references":{"id":"basic/pointer-references","title":"A.33. Pointer & References","description":"Chapter ini membahas tentang apa itu pointer, references, dan dereferences. Pembelajaran dimulai tentang konsep dan praktik dasar tentang ketiga topik tersebut, kemudian diikuti dengan pembahasan tentang karakteristik pointer & reference.","sidebar":"tutorialSidebar"},"basic/recoverable-error-handling":{"id":"basic/recoverable-error-handling","title":"A.55. Error \u279c Recoverable Error & Error Handling","description":"Chapter ini merupakan kelanjutan dari chapter sebelumnya tentang pembahasan topic error. Kali ini fokus kita lebih ke recoverable error dan penanganannya (error handling / error propagation).","sidebar":"tutorialSidebar"},"basic/result-type":{"id":"basic/result-type","title":"A.40. Tipe Data \u279c Result","description":"Chapter ini membahas tentang tipe data Result, yaitu tipe data yang digunakan untuk menampung nilai yang isinya bisa berupa penanda operasi sukses (Ok) dan data, atau error (Err) beserta keterangan errornya.","sidebar":"tutorialSidebar"},"basic/seleksi-kondisi-if":{"id":"basic/seleksi-kondisi-if","title":"A.9. Seleksi Kondisi \u279c  if, else if, else","description":"Pada chapter ini kita akan bahas tentang penerapan if untuk kontrol alur program.","sidebar":"tutorialSidebar"},"basic/shadowing":{"id":"basic/shadowing","title":"A.31. Shadowing","description":"Pada chapter ini kita akan belajar tentang shadowing pada variable dan apa perbedaannya dibanding variable mutable.","sidebar":"tutorialSidebar"},"basic/slice":{"id":"basic/slice","title":"A.14. Slice (Basic)","description":"Pada bab ini kita belajar tentang apa itu slice, apa perbedaan slice dan array, slicing atau borrowing pada slice, dan juga slice mutability.","sidebar":"tutorialSidebar"},"basic/slice-memory-management":{"id":"basic/slice-memory-management","title":"A.45. Slice Memory Management","description":"Kita telah mempelajari tipe data Array dan Vector, serta sudah beberapa kali menggunakan tipe data string slice (String). 3 tipe data itu memiliki kemiripan, yaitu kesemuanya termasuk dalam kategori tipe data slice.","sidebar":"tutorialSidebar"},"basic/static":{"id":"basic/static","title":"A.43. Static Item","description":"Pada chapter ini kita akan bahas tentang apa itu static item, dan perbedaanya dibanding konstanta.","sidebar":"tutorialSidebar"},"basic/string-slice-vs-string-literal":{"id":"basic/string-slice-vs-string-literal","title":"A.46. String Literal (&str) vs. String Custom Type","description":"Pada chapter sebelumnya kita telah membahas tentang bagaimana data slice di-manage di memory. Ada beberapa tipe data yang masuk dalam kategori slice, yang salah satunya adalah string slice atau String.","sidebar":"tutorialSidebar"},"basic/struct":{"id":"basic/struct","title":"A.23. Struct","description":"Pada chapter ini kita akan belajar tentang struct.","sidebar":"tutorialSidebar"},"basic/tipe-data-custom-type-string-slice":{"id":"basic/tipe-data-custom-type-string-slice","title":"A.47. Tipe Data \u279c String Custom Type","description":"Pembahasan kali ini lingkupnya masih dalam topik custom type String.","sidebar":"tutorialSidebar"},"basic/tipe-data-primitive-scalar":{"id":"basic/tipe-data-primitive-scalar","title":"A.5. Tipe Data \u279c Primitive Scalar","description":"Tipe data di Rust dikategorikan menjadi beberapa group, salah satunya adalah group tipe data primitif scalar atau biasa disebut scalar types. Pada chapter ini kita akan mempelajarinya.","sidebar":"tutorialSidebar"},"basic/tipe-data-string-literal":{"id":"basic/tipe-data-string-literal","title":"A.6. Tipe Data \u279c String Literal (&str)","description":"String adalah tipe data penting dalam pemrograman manapun. Biasanya tiap bahasa punya cara berbeda dalam meng-handle tipe ini. Di bahasa Rust, ada dua jenis tipe data string:","sidebar":"tutorialSidebar"},"basic/trait-function":{"id":"basic/trait-function","title":"A.49. Trait \u279c Function (Fn, FnMut, FnOnce)","description":"Chapter ini merupakan topik lanjutan dari chapter sebelumnya, di sini kita akan bahas beberapa jenis trait yang digunakan di closure.","sidebar":"tutorialSidebar"},"basic/trait-iterator":{"id":"basic/trait-iterator","title":"A.50. Trait \u279c Iterator","description":"Iterator adalah salah satu trait dan tipe data custom penting pada Rust programming, gunanya untuk iterasi data. Di chapter ini kita akan mempelajarinya beserta beberapa module item lainnya yang masih relevan dengan topik Iterator.","sidebar":"tutorialSidebar"},"basic/traits":{"id":"basic/traits","title":"A.36. Traits","description":"Trait jika diartikan dalam Bahasa Indonesia artinya adalah sifat. Chapter ini akan membahas tentang apa itu trait, apa kegunaannya, dan bagaimana cara penerapannya di Rust programming.","sidebar":"tutorialSidebar"},"basic/tuple":{"id":"basic/tuple","title":"A.15. Tipe Data \u279c Tuple","description":"Pada chapter ini kita akan membahas tentang tipe data kolektif bernama Tuple.","sidebar":"tutorialSidebar"},"basic/type-alias-casting":{"id":"basic/type-alias-casting","title":"A.27. Type Alias & Casting","description":"Chapter ini membahas tentang type alias dan juga casting (explicit conversion) pada tipe data primitif scalar.","sidebar":"tutorialSidebar"},"basic/unrecoverable-panic-error":{"id":"basic/unrecoverable-panic-error","title":"A.54. Error \u279c Unrecoverable Error / Panic","description":"Error handling atau penanganan error adalah salah satu aspek penting dalam pemrograman selalu umum. Rust mengenal 2 jenis error yaitu unrecoverable error (panic error) dan recoverable error. Pembahasan chapter ini fokus pada unrecoverable error atau panic error.","sidebar":"tutorialSidebar"},"basic/use":{"id":"basic/use","title":"A.29. Module System \u279c Use, Import, Re-export","description":"Keyword use digunakan untuk dua hal, yaitu import path dan re-export path. Sebenarnya kita telah mempelajari kedua penerapan tersebut pada beberapa chapter sebelumnya. Pada chapter ini kita akan ulang lagi pembahasan agar lebih jelas.","sidebar":"tutorialSidebar"},"basic/variabel":{"id":"basic/variabel","title":"A.4. Variabel","description":"Rust merupakan bahasa yang kalau dikategorikan berdasarkan type system-nya adalah statically typed, yang artinya semua tipe data harus diketahui saat kompilasi (compile time).","sidebar":"tutorialSidebar"},"basic/vector":{"id":"basic/vector","title":"A.16. Tipe Data \u279c Vector","description":"Pada chapter ini kita akan belajar tetang tipe data Vector. Vector adalah tipe data seperti array tapi dinamis. Dinamis di sini artinya bisa bertambah dan berkurang kapanpun sesuai kebutuhan.","sidebar":"tutorialSidebar"},"basic/visibility-privacy":{"id":"basic/visibility-privacy","title":"A.28. Module System \u279c Visibility & Privacy","description":"Kita sebenarnya sudah mempelajari banyak hal yang berhubungan dengan visibility & privacy pada beberapa chapter sebelumnya. Jika pembaca mempelajari ebook ini secara urut, maka pastinya sudah familiar dengan keyword pub, self, crate, dan super.","sidebar":"tutorialSidebar"},"CHANGELOG":{"id":"CHANGELOG","title":"Version Changelogs & Updates","description":"\ud83d\udcdd Release v1.0.20240830 (2024-08-30)","sidebar":"tutorialSidebar"},"CONTRIBUTING":{"id":"CONTRIBUTING","title":"Contribution & Tech Stack","description":"Ebook Dasar Pemrograman Rust adalah project open source. Siapapun bebas untuk berkontribusi di sini, bisa dalam bentuk perbaikan typo, update kalimat, maupun submit tulisan baru.","sidebar":"tutorialSidebar"},"download-pdf":{"id":"download-pdf","title":"Download versi PDF","description":"Ebook Dasar Pemrograman Rust bisa di-download dalam bentuk file PDF, silakan gunakan link berikut:","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Tutorial Belajar Rust (Gratis!)","description":"Rust adalah sebuah bahasa pemrograman general purpose yang fokus pada performance, type safety, dan concurrency. Bahasa ini diciptakan sebagai alternatif bahasa pemrograman yang berfokus pada hal-hal yang cukup low-level tapi tetap men-support fitur yang sifatnya high-level.","sidebar":"tutorialSidebar"},"installation/instalasi-rust":{"id":"installation/instalasi-rust","title":"Instalasi Rust","description":"Pada chapter ini kita akan belajar cara instalasi Rust. Pembaca bisa mengikuti panduan instalasi ini, atau langsung saja navigasi ke https://www.rust-lang.org/tools/install.","sidebar":"tutorialSidebar"},"installation/rust-editor-plugin":{"id":"installation/rust-editor-plugin","title":"Rust Editor & Plugin","description":"Pemilihan editor dan plugin","sidebar":"tutorialSidebar"},"LICENSE":{"id":"LICENSE","title":"Lisensi & Distribusi Konten","description":"Ebook Dasar Pemrograman Rust gratis untuk disebarluaskan secara bebas, dengan catatan sesuai dengan aturan lisensi CC BY-SA 4.0 yang kurang lebih sebagai berikut:","sidebar":"tutorialSidebar"},"pengelanan-rust-programming":{"id":"pengelanan-rust-programming","title":"Pengenalan Rust Programming","description":"Rust adalah sebuah bahasa pemrograman general purpose yang fokus pada performance, type safety, dan concurrency. Bahasa ini diciptakan sebagai alternatif bahasa pemrograman yang berfokus pada hal-hal yang cukup low-level tapi tetap men-support fitur yang sifatnya high-level.","sidebar":"tutorialSidebar"}}}')}}]);